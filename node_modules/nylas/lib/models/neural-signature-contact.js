"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
var restful_model_1 = __importDefault(require("./restful-model"));
var attributes_1 = __importDefault(require("./attributes"));
var contact_1 = require("./contact");
var Link = /** @class */ (function (_super) {
    __extends(Link, _super);
    function Link() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Link.prototype.toJSON = function () {
        return {
            description: this.description,
            url: this.url,
        };
    };
    return Link;
}(restful_model_1.default));
Link.collectionName = 'link';
Link.attributes = {
    description: attributes_1.default.String({
        modelKey: 'description',
    }),
    url: attributes_1.default.String({
        modelKey: 'url',
    }),
};
var Name = /** @class */ (function (_super) {
    __extends(Name, _super);
    function Name() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Name.prototype.toJSON = function () {
        return {
            type: this.firstName,
            email: this.lastName,
        };
    };
    return Name;
}(restful_model_1.default));
Name.collectionName = 'name';
Name.attributes = {
    firstName: attributes_1.default.String({
        modelKey: 'firstName',
        jsonKey: 'first_name',
    }),
    lastName: attributes_1.default.String({
        modelKey: 'lastName',
        jsonKey: 'last_name',
    }),
};
var NeuralSignatureContact = /** @class */ (function (_super) {
    __extends(NeuralSignatureContact, _super);
    function NeuralSignatureContact() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    NeuralSignatureContact.prototype.toJSON = function () {
        return {
            job_titles: this.jobTitles,
            links: this.links,
            phone_numbers: this.phoneNumbers,
            emails: this.emails,
            names: this.names ? this.names.map(function (name) { return name.toJSON(); }) : this.names,
        };
    };
    NeuralSignatureContact.prototype.toContactObject = function () {
        var _this = this;
        var contact = new contact_1.Contact(this.connection);
        if (this.names) {
            contact.givenName = this.names[0].firstName;
            contact.surname = this.names[0].lastName;
        }
        if (this.jobTitles) {
            contact.jobTitle = this.jobTitles[0];
        }
        if (this.emails) {
            var contactEmails_1 = [];
            this.emails.forEach(function (email) {
                return contactEmails_1.push(new contact_1.EmailAddress(_this.connection, { type: 'personal', email: email }));
            });
            contact.emailAddresses = contactEmails_1;
        }
        if (this.phoneNumbers) {
            var contactNumbers_1 = [];
            this.phoneNumbers.forEach(function (number) {
                return contactNumbers_1.push(new contact_1.PhoneNumber(_this.connection, { type: 'mobile', number: number }));
            });
            contact.phoneNumbers = contactNumbers_1;
        }
        if (this.links) {
            var webPages_1 = [];
            this.links.forEach(function (link) {
                if (link['url']) {
                    webPages_1.push(new contact_1.WebPage(_this.connection, { type: 'homepage', url: link['url'] }));
                }
            });
            contact.webPages = webPages_1;
        }
        return contact;
    };
    return NeuralSignatureContact;
}(restful_model_1.default));
exports.default = NeuralSignatureContact;
NeuralSignatureContact.collectionName = 'signature_contact';
NeuralSignatureContact.attributes = {
    jobTitles: attributes_1.default.StringList({
        modelKey: 'jobTitles',
        jsonKey: 'job_titles',
    }),
    links: attributes_1.default.Collection({
        modelKey: 'links',
        itemClass: Link,
    }),
    phoneNumbers: attributes_1.default.StringList({
        modelKey: 'phoneNumbers',
        jsonKey: 'phone_numbers',
    }),
    emails: attributes_1.default.StringList({
        modelKey: 'emails',
    }),
    names: attributes_1.default.Collection({
        modelKey: 'names',
        itemClass: Name,
    }),
};
