"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
var restful_model_1 = __importDefault(require("./restful-model"));
var attributes_1 = __importDefault(require("./attributes"));
var Account = /** @class */ (function (_super) {
    __extends(Account, _super);
    function Account() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return Account;
}(restful_model_1.default));
exports.default = Account;
Account.collectionName = 'accounts';
Account.endpointName = 'account';
Account.attributes = __assign(__assign({}, restful_model_1.default.attributes), { name: attributes_1.default.String({
        modelKey: 'name',
    }), emailAddress: attributes_1.default.String({
        modelKey: 'emailAddress',
        jsonKey: 'email_address',
    }), provider: attributes_1.default.String({
        modelKey: 'provider',
    }), organizationUnit: attributes_1.default.String({
        modelKey: 'organizationUnit',
        jsonKey: 'organization_unit',
    }), syncState: attributes_1.default.String({
        modelKey: 'syncState',
        jsonKey: 'sync_state',
    }), billingState: attributes_1.default.String({
        modelKey: 'billingState',
        jsonKey: 'billing_state',
    }), linkedAt: attributes_1.default.DateTime({
        modelKey: 'linkedAt',
        jsonKey: 'linked_at',
    }) });
