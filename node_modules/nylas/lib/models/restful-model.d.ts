import { Attribute } from './attributes';
import NylasConnection from '../nylas-connection';
export declare type SaveCallback = (error: Error | null, result?: RestfulModel) => void;
interface RestfulModelJSON {
    id: string;
    object: string;
    accountId: string;
    [key: string]: any;
}
export default class RestfulModel {
    static endpointName: string;
    static collectionName: string;
    static attributes: {
        [key: string]: Attribute;
    };
    accountId?: string;
    connection: NylasConnection;
    id?: string;
    object?: string;
    baseUrl?: string;
    constructor(connection: NylasConnection, json?: Partial<RestfulModelJSON>);
    attributes(): {
        [key: string]: Attribute;
    };
    isEqual(other: RestfulModel): boolean;
    fromJSON(json?: Partial<RestfulModelJSON>): this;
    toJSON(enforceReadOnly?: boolean): any;
    pathPrefix(): string;
    saveEndpoint(): string;
    saveRequestBody(): any;
    deleteRequestQueryString(_params: {
        [key: string]: any;
    }): {};
    deleteRequestBody(_params: {
        [key: string]: any;
    }): {};
    deleteRequestOptions(params: {
        [key: string]: any;
    }): {
        body: {};
        qs: {};
    };
    toString(): string;
    _save(params?: {} | SaveCallback, callback?: SaveCallback): Promise<this>;
    _get(params?: {
        [key: string]: any;
    }, callback?: (error: Error | null, result?: any) => void, pathSuffix?: string): Promise<any>;
}
export {};
