"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.Contact = exports.Group = exports.WebPage = exports.PhoneNumber = exports.EmailAddress = void 0;
var restful_model_1 = __importDefault(require("./restful-model"));
var attributes_1 = __importDefault(require("./attributes"));
var EmailAddress = /** @class */ (function (_super) {
    __extends(EmailAddress, _super);
    function EmailAddress() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    EmailAddress.prototype.toJSON = function () {
        return {
            type: this.type,
            email: this.email,
        };
    };
    return EmailAddress;
}(restful_model_1.default));
exports.EmailAddress = EmailAddress;
EmailAddress.collectionName = 'email_addresses';
EmailAddress.attributes = __assign(__assign({}, restful_model_1.default.attributes), { type: attributes_1.default.String({
        modelKey: 'type',
    }), email: attributes_1.default.String({
        modelKey: 'email',
    }) });
var IMAddress = /** @class */ (function (_super) {
    __extends(IMAddress, _super);
    function IMAddress() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    IMAddress.prototype.toJSON = function () {
        return {
            type: this.type,
            im_address: this.imAddress,
        };
    };
    return IMAddress;
}(restful_model_1.default));
IMAddress.collectionName = 'im_addresses';
IMAddress.attributes = __assign(__assign({}, restful_model_1.default.attributes), { type: attributes_1.default.String({
        modelKey: 'type',
    }), imAddress: attributes_1.default.String({
        modelKey: 'imAddress',
        jsonKey: 'im_address',
    }) });
var PhysicalAddress = /** @class */ (function (_super) {
    __extends(PhysicalAddress, _super);
    function PhysicalAddress() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    PhysicalAddress.prototype.toJSON = function () {
        var json = {
            type: this.type,
            format: this.format,
        };
        if (this.format == 'unstructured') {
            json.address = this.address;
        }
        else {
            json.street_address = this.streetAddress;
            json.postal_code = this.postalCode;
            json.state = this.state;
            json.city = this.city;
            json.country = this.country;
        }
        return json;
    };
    return PhysicalAddress;
}(restful_model_1.default));
PhysicalAddress.collectionName = 'physical_addresses';
PhysicalAddress.attributes = __assign(__assign({}, restful_model_1.default.attributes), { type: attributes_1.default.String({
        modelKey: 'type',
    }), format: attributes_1.default.String({
        modelKey: 'format',
    }), address: attributes_1.default.String({
        modelKey: 'address',
    }), streetAddress: attributes_1.default.String({
        modelKey: 'streetAddress',
        jsonKey: 'street_address',
    }), city: attributes_1.default.String({
        modelKey: 'city',
    }), postalCode: attributes_1.default.String({
        modelKey: 'postalCode',
        jsonKey: 'postal_code',
    }), state: attributes_1.default.String({
        modelKey: 'state',
    }), country: attributes_1.default.String({
        modelKey: 'country',
    }) });
var PhoneNumber = /** @class */ (function (_super) {
    __extends(PhoneNumber, _super);
    function PhoneNumber() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    PhoneNumber.prototype.toJSON = function () {
        return {
            type: this.type,
            number: this.number,
        };
    };
    return PhoneNumber;
}(restful_model_1.default));
exports.PhoneNumber = PhoneNumber;
PhoneNumber.collectionName = 'phone_numbers';
PhoneNumber.attributes = __assign(__assign({}, restful_model_1.default.attributes), { type: attributes_1.default.String({
        modelKey: 'type',
    }), number: attributes_1.default.String({
        modelKey: 'number',
    }) });
var WebPage = /** @class */ (function (_super) {
    __extends(WebPage, _super);
    function WebPage() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    WebPage.prototype.toJSON = function () {
        var json = {
            type: this.type,
            url: this.url,
        };
        return json;
    };
    return WebPage;
}(restful_model_1.default));
exports.WebPage = WebPage;
WebPage.collectionName = 'web_pages';
WebPage.attributes = __assign(__assign({}, restful_model_1.default.attributes), { type: attributes_1.default.String({
        modelKey: 'type',
    }), url: attributes_1.default.String({
        modelKey: 'url',
    }) });
var Group = /** @class */ (function (_super) {
    __extends(Group, _super);
    function Group() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return Group;
}(restful_model_1.default));
exports.Group = Group;
Group.collectionName = 'groups';
Group.attributes = __assign(__assign({}, restful_model_1.default.attributes), { name: attributes_1.default.String({
        modelKey: 'name',
    }), path: attributes_1.default.String({
        modelKey: 'path',
    }) });
var Contact = /** @class */ (function (_super) {
    __extends(Contact, _super);
    function Contact() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Contact.prototype.save = function (params, callback) {
        if (params === void 0) { params = {}; }
        return this._save(params, callback);
    };
    Contact.prototype.getPicture = function (params, callback) {
        if (params === void 0) { params = {}; }
        return this._get(params, callback, '/picture');
    };
    return Contact;
}(restful_model_1.default));
exports.Contact = Contact;
Contact.collectionName = 'contacts';
Contact.attributes = __assign(__assign({}, restful_model_1.default.attributes), { givenName: attributes_1.default.String({
        modelKey: 'givenName',
        jsonKey: 'given_name',
    }), middleName: attributes_1.default.String({
        modelKey: 'middleName',
        jsonKey: 'middle_name',
    }), surname: attributes_1.default.String({
        modelKey: 'surname',
    }), suffix: attributes_1.default.String({
        modelKey: 'suffix',
    }), nickname: attributes_1.default.String({
        modelKey: 'nickname',
    }), birthday: attributes_1.default.String({
        modelKey: 'birthday',
    }), companyName: attributes_1.default.String({
        modelKey: 'companyName',
        jsonKey: 'company_name',
    }), jobTitle: attributes_1.default.String({
        modelKey: 'jobTitle',
        jsonKey: 'job_title',
    }), managerName: attributes_1.default.String({
        modelKey: 'managerName',
        jsonKey: 'manager_name',
    }), officeLocation: attributes_1.default.String({
        modelKey: 'officeLocation',
        jsonKey: 'office_location',
    }), notes: attributes_1.default.String({
        modelKey: 'notes',
    }), pictureUrl: attributes_1.default.String({
        modelKey: 'pictureUrl',
        jsonKey: 'picture_url',
    }), emailAddresses: attributes_1.default.Collection({
        modelKey: 'emailAddresses',
        jsonKey: 'emails',
        itemClass: EmailAddress,
    }), imAddresses: attributes_1.default.Collection({
        modelKey: 'imAddresses',
        jsonKey: 'im_addresses',
        itemClass: IMAddress,
    }), physicalAddresses: attributes_1.default.Collection({
        modelKey: 'physicalAddresses',
        jsonKey: 'physical_addresses',
        itemClass: PhysicalAddress,
    }), phoneNumbers: attributes_1.default.Collection({
        modelKey: 'phoneNumbers',
        jsonKey: 'phone_numbers',
        itemClass: PhoneNumber,
    }), webPages: attributes_1.default.Collection({
        modelKey: 'webPages',
        jsonKey: 'web_pages',
        itemClass: WebPage,
    }), groups: attributes_1.default.Collection({
        modelKey: 'groups',
        itemClass: Group,
    }), source: attributes_1.default.String({
        modelKey: 'source',
    }), jobStatusId: attributes_1.default.String({
        modelKey: 'jobStatusId',
        jsonKey: 'job_status_id',
        readOnly: true,
    }) });
